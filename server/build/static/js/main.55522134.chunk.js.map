{"version":3,"sources":["components/Footer/footer.module.css","components/NavBar/navbar.module.css","components/PrivateRoute/index.jsx","components/NavBar/index.jsx","constants.js","components/LoginPage/index.jsx","components/Dashboard/card.jsx","components/Dashboard/config.js","components/Dashboard/index.jsx","components/Footer/index.jsx","components/Maps/GoogleMap.jsx","components/Maps/index.jsx","components/Blank/index.jsx","App.jsx","registerServiceWorker.js","index.jsx"],"names":["module","exports","PrivateRoute","Component","component","userLogged","rest","Route","render","props","Redirect","to","pathname","state","from","location","NavBar","logOut","Fragment","className","styles","skipLink","href","Link","onClick","CONSTANTS","LoginPage","setUserLogged","useState","username","setUsername","password","setPassword","push","type","name","placeholder","value","onChange","e","target","id","alert","fetch","ENDPOINT","method","mode","cache","headers","then","response","json","localStorage","setItem","JSON","stringify","catch","Card","title","content","defaultState","data","x","y","layout","width","height","updatemenus","buttons","args","label","direction","pad","r","t","showactive","xaxis","autorange","rangeselector","count","step","stepmode","yaxis","frames","config","Dashboard","mapToEndpoint","bgmeister","gyaya","futura","console","log","this","business","setState","map","item","timestamp","waste_kg","onInitialized","figure","onUpdate","React","Footer","footer","description","mapStyles","MapContainer","displayMarkers","businesses","store","index","key","position","lat","latitude","lng","longitude","style","initialCenter","google","zoom","GoogleApiWrapper","apiKey","Maps","setBusi","useEffect","busi","idx","BlankPage","App","getItem","preventDefault","removeItem","Switch","exact","path","Blank","parse","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","BrowserRouter","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.55522134.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__2oW47\",\"title\":\"footer_title__piRrt\",\"description\":\"footer_description__NPmPK\",\"footerlink\":\"footer_footerlink__aH3y3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skipLink\":\"navbar_skipLink__3TdC_\"};","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, userLogged, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        userLogged ? (\n          <Component {...rest} {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./navbar.module.css\";\n\nconst NavBar = ({ userLogged, logOut }) => {\n  return (\n    <React.Fragment>\n      <div className={styles.skipLink}>\n        <a href=\"#mainContent\">Skip to Main Content</a>\n      </div>\n      <nav className=\"navbar navbar-expand-sm navbar-light border-bottom justify-content-between\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Nulleiemer\n        </Link>\n        <div className=\"navbar-nav\">\n          {/* business side */}\n          {userLogged ? (\n            <>\n              <Link className=\"mr-2\" to=\"/dashboard\">\n                Dashboard\n              </Link>\n              <Link className=\"mr-2\" to=\"/account\">\n                Account\n              </Link>\n              <Link className=\"mr-2\" to=\"/guide\">\n                Guide\n              </Link>\n            </>\n          ) : /* client side */ (\n            <>\n              <Link className=\"mr-2\" to=\"/maps\">\n                List\n              </Link>\n              <Link className=\"mr-2\" to=\"/about\">\n                About\n              </Link>\n            </>\n          )}\n\n          <Link\n            className=\"mr-2\"\n            to={userLogged ? \"/logout\" : \"/login\"}\n            onClick={userLogged ? logOut : null}\n          >\n            {userLogged ? \"Logout\" : \"Business Login\"}\n          </Link>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n};\n\nexport default NavBar;\n","const CONSTANTS = {};\n\nCONSTANTS.ERROR_MESSAGE = {};\n\nCONSTANTS.ENDPOINT = \"https://5d738429214da600148f58b0.mockapi.io/api/v1/\";\n\nexport default CONSTANTS;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport CONSTANTS from \"../../constants\";\n\nconst LoginPage = ({userLogged, setUserLogged}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const login = () => {\n    if (username === '' || username === null) {\n      alert('Please input a username');\n      return;\n    }\n\n    /* if (password === '' || password === null) {\n      alert('Please input a password');\n      return;\n    }\n\n    if (password !== '123456') {\n      alert('Username or password not found');\n      return;\n    } */\n\n    let id = null;\n\n    switch(username) {\n      case 'bgmeister':\n        id = 1;\n        break;\n      case 'gyaya':\n        id = 2;\n        break;\n      case 'futura':\n        id = 3;\n        break;\n      default:\n        alert('Username or password not found');\n        return null;\n    }\n\n    fetch(`${CONSTANTS.ENDPOINT}/businesses/${id}`, {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json())\n      .then(json => {\n        localStorage.setItem('business', JSON.stringify(json));\n        setUserLogged(true);\n      })\n      .catch(response => alert(response));\n  }\n\n  if (userLogged) {\n    return ( <Redirect push to=\"/dashboard\" /> );\n  }\n\n  return (\n    <React.Fragment>\n      <h2 className=\"ml-2\">Login</h2>\n      <div className=\"form-group row\">\n        <input className=\"ml-4\" type=\"text\" name=\"username\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} />\n        <input className=\"ml-4\" type=\"password\" name=\"username\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\n        <input className=\"btn btn-primary\" type=\"button\" value=\"Sign in\" onClick={login} />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default LoginPage;\n","import React from \"react\";\n\nexport const Card = ({ title, content }) => (\n  <div className=\"card\">\n    <div className=\"card-body\">\n      <h5 className=\"card-title\">{title}</h5>\n      <p className=\"card-text\">{content}</p>\n    </div>\n  </div>\n);\n","const updatemenus = [\n  {\n    buttons: [\n      {\n        args: [\"type\", \"bar\"],\n        label: \"Bar\",\n        method: \"restyle\"\n      },\n      {\n        args: [\"type\", \"line\"],\n        label: \"Line\",\n        method: \"restyle\"\n      }\n    ],\n    direction: \"right\",\n    pad: { r: 10, t: 10 },\n    showactive: true,\n    type: \"buttons\"\n  }\n];\n\nexport const defaultState = {\n  data: [{ type: \"bar\", x: [], y: [] }],\n  layout: {\n    width: 1200,\n    height: 600,\n    updatemenus: updatemenus,\n    xaxis: {\n      autorange: true,\n      rangeselector: {\n        buttons: [\n          {\n            count: 1,\n            label: \"1m\",\n            step: \"month\",\n            stepmode: \"backward\"\n          },\n          { step: \"all\" }\n        ]\n      },\n      // rangeslider: {},\n      type: \"date\"\n    },\n    yaxis: {\n      title: \"Waste [kg]\"\n    }\n  },\n  frames: [],\n  config: {}\n};\n","import React from \"react\";\nimport { Card } from \"./card\";\nimport Plot from \"react-plotly.js\";\nimport CONSTANTS from \"../../constants\";\nimport { defaultState } from \"./config\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = defaultState;\n  }\n\n  componentDidMount() {\n    const mapToEndpoint = {\n      bgmeister: \"wastes1\",\n      gyaya: \"wastes2\",\n      futura: \"wastes3\"\n    };\n    // console.log(this.props);\n    console.log(this.props.business.username);\n    console.log(this.props.business.name);\n    console.log(mapToEndpoint[this.props.business.username]);\n    fetch(`${CONSTANTS.ENDPOINT}${mapToEndpoint[this.props.business.username]}`)\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          // title: this.props.business.name,\n          // title: \"Hello\",\n          layout: {\n            ...this.state.layout,\n            title: this.props.business.name\n          },\n          data: [\n            {\n              type: \"line\",\n              x: data.map(item => item.timestamp),\n              y: data.map(item => item.waste_kg)\n            }\n          ]\n        })\n      );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"ml-2 mt-2 mr-2 mb-2\">\n          <div className=\"row\">\n            <div className=\"col-md\">\n              <Card title=\"Badge\" content={\"image\"} />\n            </div>\n            <div className=\"col-md\">\n              <Card title=\"Score\" content={\"score \"} />\n            </div>\n          </div>\n          <div className=\"ml-2 mt-2 mr-2 mb-2\">\n            <Plot\n              data={this.state.data}\n              layout={this.state.layout}\n              frames={this.state.frames}\n              config={this.state.config}\n              onInitialized={figure => this.setState(figure)}\n              onUpdate={figure => this.setState(figure)}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport styles from \"./footer.module.css\";\n\nexport default function Footer() {\n  return (\n    <footer className={styles.footer}>\n      <div className=\"container-fluid\">\n        <div className=\"row justify-content-left\">\n          <div className=\"col-8 col-md-5\">\n            <h5 className={styles.title}>Nulleimer</h5>\n            <p className={styles.description}>\n              Track waste, save food!\n            </p>\n          </div>\n          {/* <div className=\"col-2\">\n            <ul className=\"list-unstyled\">\n              <li>\n                <a className={styles.footerlink} href=\"/\">\n                  Example Link\n                </a>\n              </li>\n              <li>\n                <a className={styles.footerlink} href=\"/\">\n                  Example Link\n                </a>\n              </li>\n              <li>\n                <a className={styles.footerlink} href=\"/\">\n                  Example Link\n                </a>\n              </li>\n            </ul>\n          </div> */}\n        </div>\n      </div>\n    </footer>\n  );\n}\n","import React, { useState, useEffect, Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport CONSTANTS from \"../../constants\";\n\nconst mapStyles = {\n  width: 900,\n  height: 600\n};\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    console.log(props);\n    super(props);\n  }\n\n\n  displayMarkers = () => {\n    return this.props.businesses.map((store, index) => {\n      return (\n        <Marker\n          key={index}\n          id={index}\n          position={{\n            lat: store.latitude,\n            lng: store.longitude\n          }}\n          onClick={() => console.log(\"You clicked me!\")}\n        />\n      );\n    });\n  };\n  render() {\n    return (\n      <Map\n        style={mapStyles}\n        initialCenter={{\n          lat: this.props.businesses[0].latitude,\n          lng: this.props.businesses[0].longitude\n        }}\n        google={this.props.google}\n        zoom={12}\n      >\n        {this.displayMarkers()}\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCI2r1FCVmUEMlMeMzjuu6ia1O-v83tRDc\"\n})(MapContainer);\n","import React, { useState, useEffect } from \"react\";\nimport CONSTANTS from \"../../constants\";\nimport MyMapComponent from \"./GoogleMap\";\n\nfunction Maps(props) {\n  const [businesses, setBusi] = useState(null);\n  useEffect(() => {\n    fetch(`${CONSTANTS.ENDPOINT}/businesses`)\n      .then(response => response.json())\n      .then(data => setBusi(data));\n  }, []);\n  return (\n    <React.Fragment>\n      <div className=\"row\">\n        <div className=\"col-3 ml-2 mt-2 mr-2 mb-2\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h3>List</h3>\n              <ul>\n                {businesses &&\n                  businesses.map((busi, idx) => (\n                    // <li>{JSON.stringify(busi)}</li>\n                    <li key={idx}>{busi.name}</li>\n                  ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md ml-2 mt-2 mr-2 mb-2\">\n          <div className=\"\">\n            {businesses && <MyMapComponent businesses={businesses} />}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Maps;\n","import React from \"react\";\n\nfunction BlankPage({ title }) {\n  return <h2>{title}</h2>;\n}\n\nexport default BlankPage;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport NavBar from \"./components/NavBar\";\nimport LoginPage from \"./components/LoginPage\";\nimport Dashboard from \"./components/Dashboard\";\nimport Footer from \"./components/Footer\";\nimport Maps from \"./components/Maps\";\nimport BlankPage from \"./components/Blank\";\n\nconst App = () => {\n  const [userLogged, setUserLogged] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"business\") !== null) {\n      setUserLogged(true);\n    }\n  }, []);\n\n  const logOut = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"business\");\n    setUserLogged(false);\n  };\n\n  return (\n    <React.Fragment>\n      <NavBar userLogged={userLogged} logOut={logOut} />\n      <div className=\"app-container container\">\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={props => <BlankPage {...props} title={\"Home\"} />}\n        />\n        <Route\n          path=\"/login\"\n          render={props => (\n            <LoginPage\n              {...props}\n              userLogged={userLogged}\n              setUserLogged={setUserLogged}\n            />\n          )}\n        />\n        <Route path=\"/maps\" component={Maps} />\n        <Route\n          path=\"/about\"\n          render={props => <BlankPage {...props} title={\"About\"} />}\n        />\n\n        <PrivateRoute\n          path=\"/dashboard\"\n          component={Dashboard}\n          userLogged={userLogged}\n          business={JSON.parse(localStorage.getItem(\"business\"))}\n        />\n        <PrivateRoute\n          path=\"/guide\"\n          component={BlankPage}\n          userLogged={userLogged}\n          title={\"Guide\"}\n        />\n        <PrivateRoute\n          path=\"/account\"\n          component={BlankPage}\n          userLogged={userLogged}\n          title={\"Account\"}\n        />\n      </Switch>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}